#ifndef _OLED_H_
#define _OLED_H_

#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32

extern Adafruit_SSD1306 display;

#define NUMFLAKES     10 // Number of snowflakes in the animation example

#define LOGO_HEIGHT   27
#define LOGO_WIDTH    128

void setupOLED();

const unsigned char petr_bmp [] PROGMEM = {
  0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xef, 0x9f, 0xc0, 0x3f, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 
0xcf, 0x9f, 0x80, 0x1f, 0x03, 0xff, 0xff, 0xff, 0xef, 0xfc, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
0xcf, 0x9f, 0x00, 0x0f, 0x03, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x7f, 0xff, 0x07, 0xff, 0xff, 0xff, 
0x9f, 0xce, 0x00, 0x06, 0x03, 0xff, 0xff, 0xff, 0xc3, 0xfe, 0x3f, 0x9f, 0x23, 0xff, 0xff, 0xff, 
0x9f, 0xce, 0x00, 0x02, 0x01, 0xff, 0xff, 0xff, 0xc0, 0xff, 0x0f, 0x8f, 0x33, 0xff, 0xff, 0xff, 
0x9f, 0xcc, 0x03, 0x30, 0x01, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0x23, 0x8f, 0x71, 0xff, 0xff, 0xff, 
0x9f, 0xc0, 0x37, 0x30, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0x91, 0x86, 0x71, 0xff, 0xe3, 0xff, 
0x9f, 0xe0, 0xb7, 0x30, 0x19, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xc8, 0x80, 0x78, 0xff, 0x01, 0xff, 
0x9f, 0xf0, 0x94, 0x30, 0x07, 0xff, 0xff, 0xff, 0xff, 0x07, 0xc4, 0x40, 0x78, 0xe0, 0x01, 0xff, 
0x8f, 0xfc, 0xd4, 0x31, 0xf3, 0xff, 0xff, 0xff, 0xff, 0x81, 0xe6, 0x08, 0x78, 0x00, 0x71, 0xff, 
0xcf, 0xfc, 0xd4, 0xb3, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x53, 0x0c, 0x7f, 0xff, 0xc1, 0xff, 
0xc3, 0xfe, 0x57, 0xb3, 0x24, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x09, 0x86, 0xff, 0xe3, 0xc7, 0xff, 
0xc3, 0xfe, 0x73, 0xa7, 0xa7, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x08, 0xc7, 0xff, 0x20, 0x4f, 0xff, 
0xc0, 0xff, 0x33, 0x0f, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x02, 0xff, 0xfc, 0x38, 0x5f, 0xff, 
0xe0, 0xff, 0x80, 0x0f, 0x3f, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x7c, 0x60, 0xb9, 0xdf, 0xff, 
0xe0, 0x3f, 0x80, 0x0f, 0x00, 0x7e, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x70, 0x63, 0xb9, 0xc0, 0x0f, 
0xf0, 0x0f, 0xc0, 0x1e, 0x00, 0x0f, 0x80, 0xff, 0xff, 0xff, 0xf0, 0x42, 0x6f, 0xb9, 0xc0, 0x01, 
0xfc, 0x0f, 0xc0, 0x1e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0xef, 0xb9, 0xff, 0xe3, 
0xff, 0x8f, 0xc0, 0x1e, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0xef, 0x3f, 0xc0, 0x07, 
0xff, 0xcf, 0xc7, 0x9e, 0x3f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf1, 0xf3, 0x2c, 0x30, 0x00, 0x1f, 
0xff, 0xcf, 0x07, 0x9c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xe4, 0x20, 0xe0, 0x07, 0xff, 
0xff, 0x9e, 0x07, 0xbc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xe0, 0xe3, 0xe7, 0xff, 0xff, 
0xff, 0x9c, 0x47, 0xbc, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xe3, 0xff, 0xe7, 0xff, 0xff, 
0xff, 0x9c, 0x07, 0x3c, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xef, 0xff, 0xf7, 0xff, 0xff, 
0xff, 0x3c, 0x07, 0x3c, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf0, 0x11, 0xff, 0xf7, 0xff, 0xff, 
0xff, 0x3c, 0x07, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xce, 0x73, 0xff, 0xff
};

void drawLogo();

#endif //EOF OLED.h